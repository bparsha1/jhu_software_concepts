name: Run Tests

# Trigger the workflow on push to any branch and on pull requests
on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Set up PostgreSQL service for database tests
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_grad_cafe
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    # Check out the repository code
    - uses: actions/checkout@v4

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # Cache pip dependencies for faster builds
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r module_4/requirements.txt
        pip install pytest pytest-cov pytest-mock

    # Set up environment variables for testing
    - name: Set up environment variables
      run: |
        echo "DATABASE_URI=postgresql://postgres:postgres@localhost:5432/test_grad_cafe" >> $GITHUB_ENV
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "POSTGRES_USER=postgres" >> $GITHUB_ENV

    # Run the test suite
    - name: Run tests with pytest
      working-directory: ./module_4
      run: |
        pytest --verbose --cov=src --cov-report=term-missing --cov-report=xml
      env:
        # Override database connection for tests
        DB_CONN_STR: "dbname=test_grad_cafe user=postgres password=postgres host=localhost"

    # Upload coverage reports (optional)
    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./module_4/coverage.xml
        fail_ci_if_error: false
